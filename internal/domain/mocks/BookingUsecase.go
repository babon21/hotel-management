// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/babon21/hotel-management/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// BookingUsecase is an autogenerated mock type for the BookingUsecase type
type BookingUsecase struct {
	mock.Mock
}

// Add provides a mock function with given fields: booking
func (_m *BookingUsecase) Add(booking *domain.Booking) error {
	ret := _m.Called(booking)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Booking) error); ok {
		r0 = rf(booking)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: bookingId
func (_m *BookingUsecase) Delete(bookingId string) error {
	ret := _m.Called(bookingId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(bookingId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetList provides a mock function with given fields: roomId
func (_m *BookingUsecase) GetList(roomId string) ([]domain.Booking, error) {
	ret := _m.Called(roomId)

	var r0 []domain.Booking
	if rf, ok := ret.Get(0).(func(string) []domain.Booking); ok {
		r0 = rf(roomId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Booking)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(roomId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
